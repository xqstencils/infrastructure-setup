upstream registry_service {
    server registry:5000;
}

map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
  '' 'registry/2.0';
}

server {
    listen 80;
    server_name registry.demo.com;

    client_max_body_size 0;

    location / {
        proxy_pass        http://registry_service;
        proxy_redirect    off;
        proxy_set_header  HOST $host;
    }
}

server {
    listen 443;
    server_name registry.demo.com;

    ssl on;
    ssl_certificate /certs/registry.crt;
    ssl_certificate_key /certs/registry.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    client_max_body_size 0;
    chunked_transfer_encoding on;

    location /v1/ {
        return 404;
    }

    location /v2/ {
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
            return 404;
        }

        auth_basic "Registry realm";
        auth_basic_user_file /auth/htpasswd;

        add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

        proxy_pass        https://registry_service;
        proxy_set_header  Host              $http_host;
        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_read_timeout                  900;
    }
}
